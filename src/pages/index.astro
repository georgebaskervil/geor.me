---
import Analytics from "../jscomponents/Analytics.astro";
import Layout from "../layouts/Layout.astro";
import { Picture } from "astro:assets";
import iconImage from "../assets/icon.png";
import { Config } from "../config";

const years = () => {
  const start = new Date(Config.me.started);
  const now = new Date();
  return now.getFullYear() - start.getFullYear();
};

import { getCollection } from "astro:content";
const posts = (await getCollection("posts")).sort(function (
  first: any,
  second: any
) {
  return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
});
---
<Analytics />
<style>
.background-animation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to left,#110819, #000);
  z-index: -1;
}
</style>
<div class="background-animation"></div>
<Layout>
  <main>
    <div class="flex flex-col gap-10">
      <article class="md:flex-row-reverse md:justify-end md:gap-12">
        <div class="flex flex-row justify-between sm:grid-cols-3">
          <div class="col-span-2 flex flex-col gap-6 md:gap-8 my-auto">
            <h1 class="text-4xl font-bold">Hi, Iâ€™m {Config.me.name.split(" ")[0]}</h1>
            <h2 class="w-auto sm:w-[85%] md:w-[90%] leading-6 text-sm sm:text-base">
              I'm a {Config.me.job}. I started over {years} years ago. I am currently learning {Config.me.stack}. Outside of programming I like to {Config.me.hobby}.
            </h2>
            <div class="custom-breadcrumbs">
              <ul>
                {
                  Object.keys(Config.socials).map((social) => (
                    <li>
                      <a href={Config.socials[social as keyof typeof Config.socials]} rel="noreferrer" target="_blank" class="text-purple-500">
                        {social.charAt(0).toUpperCase() + social.slice(1)}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>
          </div>
          <div class="ml-auto flex justify-center items-center">
            <div class="avatar">
              <div class="w-full sm:w-auto h-auto"></div>
              <Picture
                src={iconImage}
                formats={["avif", "webp"]}
                alt="Profile icon"
                loading="eager"
                class="sm:max-w-[200px] md:max-w-[250px] lg:max-w-[300px] hover:scale-105 transition-transform duration-300 w-60 rounded border border-purple-500 shadow-md"
              />
            </div>
          </div>
        </div>
      </article>

      <article class="flex flex-col gap-4">
        <header class="flex w-full flex-row justify-between gap-2">
          <h3 class="text-lg">Featured projects:</h3>
          <a href={Config.me.projectLink} class="text-sm text-purple-500 no-underline hover:underline" target="_self" rel="noreferrer">
            See all projects
          </a>
        </header>
        <section class="grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
          {
            Object.keys(Config.projects).map((project) => (
              <div class="p-4 rounded-lg border border-neutral shadow-md hover:scale-105 transition-transform duration-300">
                <a href={Config.projects[project as keyof typeof Config.projects].url} target="_blank" rel="noreferrer">
                  <div class="flex justify-between gap-3 flex-row items-start">
                    <p class="font-semibold text-lg">{project}</p>
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="#94a0a9" stroke-linecap="round" stroke-linejoin="round" color="#94a0a9" class="tabler-icon tabler-icon-arrow-up-right transition-none md:transition-all md:duration-300 md:group-hover:translate-x-1 md:group-hover:translate-y-1">
                      <path d="M17 7l-10 10"></path>
                      <path d="M8 7l9 0l0 9"></path>
                    </svg>
                  </div>
                  {Config.projects[project as keyof typeof Config.projects].tags ? (
                    <div class="pt-1 flex flex-row flex-wrap gap-2">
                      {Config.projects[project as keyof typeof Config.projects].tags.map((item: string) => (
                        <div class="badge bg-purple-700 rounded">{item}</div>
                      ))}
                    </div>
                  ) : null}
                </a>
              </div>
            ))
          }
        </section>
      </article>

      <article class="flex flex-col gap-4">
        <header class="flex w-full flex-row justify-between gap-2">
          <h3 class="text-lg">Latest posts:</h3>
          <a href="/posts" class="text-sm text-purple-500 no-underline hover:underline" rel="noreferrer">
            See all posts
          </a>
        </header>
        <section class="grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
          {
            posts.map((post: any) => (
              <div class="p-4 rounded-lg border border-neutral shadow-md hover:scale-105 transition-transform duration-300">
                <h4 class="text-lg font-medium">{post.data.title}</h4>
                <p class="mt-2">
                  {post.data.publishedAt.toLocaleDateString("en-us", {
                    year: "numeric",
                    month: "short",
                    day: "numeric",
                  })}
                </p>
                <p class="mt-2">
                  {post.data.description}
                </p>
                <a href={"/posts/" + post.slug} class="text-purple-500 mt-4 no-underline hover:underline">
                  Read post
                </a>
              </div>
            ))
          }
        </section>
      </article>
    </div>
  </main>
</Layout>